<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.eight.dao.UserRelationDao">
    <resultMap id="BaseResultMap" type="com.eight.pojo.UserRelation" >
        <id column="souid" property="souId" jdbcType="INTEGER" />
        <id column="desid" property="desId" jdbcType="INTEGER" />
        <result column="friendly" property="friendly" jdbcType="INTEGER" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
        <result column="createtime" property="createTime" jdbcType="BIGINT" />
        <result column="changetime" property="changeTime" jdbcType="BIGINT" />
        <result column="state" property="state" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Table_Name">
        et_user_relation
    </sql>

    <sql id="Base_Column_List">
        souid, desid, friendly, remark, createtime, changetime, state
    </sql>

    <sql id="Insert_Values">
        VALUES (#{souId}, #{desId}, #{friendly}, #{remark}, #{createTime}, #{changeTime}, #{state})
    </sql>

    <sql id="Set_Values">
        <trim prefix="set" suffixOverrides="," >
            <if test="friendly != null" >
                friendly = #{friendly, jdbcType=INTEGER},
            </if>
            <if test="remark != null" >
                remark = #{remark, jdbcType=VARCHAR},
            </if>
            <if test="createTime != null and createTime != ''" >
                createtime = #{createTime, jdbcType=BIGINT},
            </if>
            <if test="changeTime != null and changeTime != ''" >
                changetime = #{changeTime, jdbcType=BIGINT},
            </if>
            <if test="state != null and state != ''" >
                state = #{state, jdbcType=VARCHAR},
            </if>
        </trim>
    </sql>

    <sql id="WhereOfMap">
        <trim prefix="where" prefixOverrides="and" >
            <if test="desId != null" >
                and desid = #{desId, jdbcType=INTEGER}
            </if>
            <if test="souId != null" >
                and souid = #{souId, jdbcType=INTEGER}
            </if>
            <if test="friendly != null" >
                and friendly = #{friendly, jdbcType=INTEGER}
            </if>
            <if test="remark != null" >
                and remark = #{remark, jdbcType=VARCHAR}
            </if>
            <if test="createTime != null and createTime != ''" >
                and createtime = #{createTime, jdbcType=BIGINT}
            </if>
            <if test="changeTime != null and changeTime != ''" >
                and changetime = #{changeTime, jdbcType=BIGINT}
            </if>
            <choose>
                <when test="state != null and state != ''" >
                    and state = #{state, jdbcType=VARCHAR}
                </when>
                <otherwise>
                    and state = '0'
                </otherwise>
            </choose>
        </trim>
    </sql>

    <sql id="WhereOfId">
        WHERE souid = #{souId, jdbcType=INTEGER} AND desid = #{desId, jdbcType=INTEGER}
    </sql>

    <sql id="OrderBy">
        <if test="sortMap != null" >
            <foreach item="value" collection="sortMap" separator="," open="order by " index="key">
                #{key} #{value}
            </foreach>
        </if>
    </sql>

    <insert id="insert"  parameterType="Map" useGeneratedKeys="true" keyProperty="id">
        INSERT <include refid="Table_Name" />
        (<include refid="Base_Column_List" />)
        <include refid="Insert_Values" />
    </insert>

    <delete id="delete" parameterType="Map">
        DELETE FROM <include refid="Table_Name" />
        <include refid="WhereOfMap" />
    </delete>

    <delete id="deleteById" parameterType="Map">
        DELETE FROM <include refid="Table_Name" />
        <include refid="WhereOfId" />
    </delete>

    <update id="deleteStateById" parameterType="Map">
        UPDATE <include refid="Table_Name" />
        set state = '1'
        <include refid="WhereOfId" />
    </update>

    <update id="update" parameterType="Map">
        UPDATE <include refid="Table_Name" />
        <include refid="Set_Values" />
        <include refid="WhereOfId" />
    </update>

    <select id="selectCount" parameterType="Map" resultType="Long">
        SELECT COUNT(1)
        FROM <include refid="Table_Name" />
        <include refid="WhereOfMap" />
    </select>

    <select id="selectById" resultMap="BaseResultMap" parameterType="Map">
        SELECT <include refid="Base_Column_List" />
        FROM <include refid="Table_Name" />
        <include refid="WhereOfId" />
    </select>

    <select id="selectList" resultMap="BaseResultMap" parameterType="Map">
        SELECT <include refid="Base_Column_List" />
        FROM <include refid="Table_Name" />
        <include refid="WhereOfMap" />
    </select>

    <select id="selectTopList" resultMap="BaseResultMap" parameterType="Map">
        SELECT <include refid="Base_Column_List" />
        FROM <include refid="Table_Name" />
        <include refid="WhereOfMap" />
        <include refid="OrderBy" />
        LIMIT #{limit}
    </select>

    <select id="selectOne" resultMap="BaseResultMap" parameterType="Map">
        SELECT <include refid="Base_Column_List" />
        FROM <include refid="Table_Name" />
        <include refid="WhereOfMap" />
        <include refid="OrderBy" />
        LIMIT 1
    </select>

    <select id="selectPageList" resultMap="BaseResultMap" parameterType="Map">
        SELECT <include refid="Base_Column_List" />
        FROM <include refid="Table_Name" />
        <include refid="WhereOfMap" />
    </select>

</mapper>